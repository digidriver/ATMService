//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ATMConsole.ATMServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestResponse", Namespace="http://schemas.datacontract.org/2004/07/ATMService")]
    [System.SerializableAttribute()]
    public partial class RequestResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessfulField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountNumber {
            get {
                return this.AccountNumberField;
            }
            set {
                if ((this.AccountNumberField.Equals(value) != true)) {
                    this.AccountNumberField = value;
                    this.RaisePropertyChanged("AccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Balance {
            get {
                return this.BalanceField;
            }
            set {
                if ((this.BalanceField.Equals(value) != true)) {
                    this.BalanceField = value;
                    this.RaisePropertyChanged("Balance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Successful {
            get {
                return this.SuccessfulField;
            }
            set {
                if ((this.SuccessfulField.Equals(value) != true)) {
                    this.SuccessfulField = value;
                    this.RaisePropertyChanged("Successful");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Account", Namespace="http://schemas.datacontract.org/2004/07/ATMService")]
    [System.SerializableAttribute()]
    public partial class Account : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountNumber {
            get {
                return this.AccountNumberField;
            }
            set {
                if ((this.AccountNumberField.Equals(value) != true)) {
                    this.AccountNumberField = value;
                    this.RaisePropertyChanged("AccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Balance {
            get {
                return this.BalanceField;
            }
            set {
                if ((this.BalanceField.Equals(value) != true)) {
                    this.BalanceField = value;
                    this.RaisePropertyChanged("Balance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ATMServiceReference.IATMService")]
    public interface IATMService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IATMService/Balance", ReplyAction="http://tempuri.org/IATMService/BalanceResponse")]
        ATMConsole.ATMServiceReference.RequestResponse Balance(int AccountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IATMService/Balance", ReplyAction="http://tempuri.org/IATMService/BalanceResponse")]
        System.Threading.Tasks.Task<ATMConsole.ATMServiceReference.RequestResponse> BalanceAsync(int AccountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IATMService/Deposit", ReplyAction="http://tempuri.org/IATMService/DepositResponse")]
        ATMConsole.ATMServiceReference.RequestResponse Deposit(int AccountNumber, decimal Amount, string Currency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IATMService/Deposit", ReplyAction="http://tempuri.org/IATMService/DepositResponse")]
        System.Threading.Tasks.Task<ATMConsole.ATMServiceReference.RequestResponse> DepositAsync(int AccountNumber, decimal Amount, string Currency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IATMService/Withdraw", ReplyAction="http://tempuri.org/IATMService/WithdrawResponse")]
        ATMConsole.ATMServiceReference.RequestResponse Withdraw(int AccountNumber, decimal Amount, string Currency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IATMService/Withdraw", ReplyAction="http://tempuri.org/IATMService/WithdrawResponse")]
        System.Threading.Tasks.Task<ATMConsole.ATMServiceReference.RequestResponse> WithdrawAsync(int AccountNumber, decimal Amount, string Currency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IATMService/LoadAccounts", ReplyAction="http://tempuri.org/IATMService/LoadAccountsResponse")]
        ATMConsole.ATMServiceReference.Account[] LoadAccounts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IATMService/LoadAccounts", ReplyAction="http://tempuri.org/IATMService/LoadAccountsResponse")]
        System.Threading.Tasks.Task<ATMConsole.ATMServiceReference.Account[]> LoadAccountsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IATMServiceChannel : ATMConsole.ATMServiceReference.IATMService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ATMServiceClient : System.ServiceModel.ClientBase<ATMConsole.ATMServiceReference.IATMService>, ATMConsole.ATMServiceReference.IATMService {
        
        public ATMServiceClient() {
        }
        
        public ATMServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ATMServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ATMServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ATMServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ATMConsole.ATMServiceReference.RequestResponse Balance(int AccountNumber) {
            return base.Channel.Balance(AccountNumber);
        }
        
        public System.Threading.Tasks.Task<ATMConsole.ATMServiceReference.RequestResponse> BalanceAsync(int AccountNumber) {
            return base.Channel.BalanceAsync(AccountNumber);
        }
        
        public ATMConsole.ATMServiceReference.RequestResponse Deposit(int AccountNumber, decimal Amount, string Currency) {
            return base.Channel.Deposit(AccountNumber, Amount, Currency);
        }
        
        public System.Threading.Tasks.Task<ATMConsole.ATMServiceReference.RequestResponse> DepositAsync(int AccountNumber, decimal Amount, string Currency) {
            return base.Channel.DepositAsync(AccountNumber, Amount, Currency);
        }
        
        public ATMConsole.ATMServiceReference.RequestResponse Withdraw(int AccountNumber, decimal Amount, string Currency) {
            return base.Channel.Withdraw(AccountNumber, Amount, Currency);
        }
        
        public System.Threading.Tasks.Task<ATMConsole.ATMServiceReference.RequestResponse> WithdrawAsync(int AccountNumber, decimal Amount, string Currency) {
            return base.Channel.WithdrawAsync(AccountNumber, Amount, Currency);
        }
        
        public ATMConsole.ATMServiceReference.Account[] LoadAccounts() {
            return base.Channel.LoadAccounts();
        }
        
        public System.Threading.Tasks.Task<ATMConsole.ATMServiceReference.Account[]> LoadAccountsAsync() {
            return base.Channel.LoadAccountsAsync();
        }
    }
}
